@model RecruitmentPlanEditViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Recruitment, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Recruitment, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Recruitment, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">下一步</button>
    @Html.ActionLink("取消", "Index", null, new { @class = "btn btn-default" })
}