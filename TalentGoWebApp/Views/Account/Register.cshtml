@model TalentGoWebApp.Models.RegisterViewModel
@{
    ViewBag.Title = "注册";
}

<div class="page-header">
    <h1>注册用户</h1>
</div>
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.IDCardNumber, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.IDCardNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.IDCardNumber, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <span>仅支持中国大陆身份证号码。</span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Surname, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.GivenName, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.GivenName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.GivenName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Mobile, new { @class = "col-md-2 control-label" })
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Mobile, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    <div class="row">
                        <button type="button" id="SendValidateCodeBtn" class="btn btn-default" onclick="return SendValidateCode(this)">发送验证码</button>
                    </div>

                </div>
                <div class="col-md-3">
                    <span></span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ValidateCode, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.ValidateCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ValidateCode, "", new { @class = "text-danger" })
                    <span class="text-danger">@Html.ValidationMessage("valID")</span>
                </div>
                <div class="col-md-3">
                    <span>* 查看手机短信获取验证码</span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <span>* 请填写一个有效的电子邮件地址，以便接收相关进展和通知</span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <span>* 密码至少8位，必须至少包含1位大写、小写、数字</span>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-5">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <span>*</span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="下一步" />
                </div>
            </div>
        }

@section Scripts
	{
    <script>

		var vctimer = null;
		var dcount = 0;
		var vcbtn = null;
		var btnClickCount = 0;

		function SendValidateCode(ele) {
			var mobile = $("#Mobile").val();
            vcbtn = ele;
            $.post("@Url.Action("SendMobileValidateCode", "Account")", { mobile: mobile }, function (data, status, xhr) {
				if (data.code != 0) {
					alert(data.msg);
				}
				else {
					btnClickCount++;
				}

			});
			ChangeButtonState();

		}



		function ChangeButtonState() {
			$(vcbtn).prop("disabled", "disabled");

			dcount = 60;
			$(vcbtn).text(dcount + "秒后重新发送");
			vctimer = setInterval(function () {
				dcount--;
				$(vcbtn).text(dcount + "秒后重新发送");
				if (dcount <= 0) {
					$(vcbtn).removeAttr("disabled");
					$(vcbtn).text("发送验证码");

					if (btnClickCount >= 2) {
						$("#CanNotReciveValidateCodeBtn").css("display", "inline-block");
					}
					window.clearInterval(vctimer);
				}
			}, 1000);
		}
    </script>

}
