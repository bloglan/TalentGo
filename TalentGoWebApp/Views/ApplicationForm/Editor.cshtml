@model ApplicationFormEditViewModel

<h3>个人信息</h3>
@Html.ValidationSummary("", new { @class = "text-danger" })
<div class="form-group">
    @Html.LabelFor(model => model.NativePlace, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.NativePlace)
    @Html.EditorFor(model => model.NativePlace, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.NativePlace, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.Source)
    @Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.PoliticalStatus, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.PoliticalStatus)
    @Html.DropDownListFor(m => m.PoliticalStatus, new List<SelectListItem>() {
new SelectListItem() { Text = "中共党员", Value = "中共党员" },
new SelectListItem() { Text = "共青团员", Value = "共青团员" },
new SelectListItem() { Text = "群众", Value = "群众" },
new SelectListItem() { Text = "其他", Value = "其他" }
}, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.PoliticalStatus, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Health, htmlAttributes: new { @class = "control-label" })
    @*@Html.EditorFor(model => model.Health, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.DescriptionFor(m => m.Health)
    @Html.DropDownListFor(m => m.Health, new List<SelectListItem>() {
new SelectListItem() { Text = "良好", Value = "良好" },
new SelectListItem() { Text = "其他", Value = "其他" }
}, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Health, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Marriage, htmlAttributes: new { @class = "control-label" })
    @*@Html.EditorFor(model => model.Marriage, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.DescriptionFor(m => m.Marriage)
    @Html.DropDownListFor(m => m.Marriage, new List<SelectListItem>() {
new SelectListItem() { Text = "未婚", Value = "未婚" },
new SelectListItem() { Text = "已婚", Value = "已婚" },
new SelectListItem() { Text = "其他", Value = "其他" }
}, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Marriage, "", new { @class = "text-danger" })
</div>

<h3>教育经历</h3>
<div class="form-group">
    @Html.LabelFor(model => model.School, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.School)
    @Html.EditorFor(model => model.School, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.School, "", new { @class = "text-danger" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Major, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.Major)
    @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.YearOfGraduated, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.YearOfGraduated)
    @Html.DropDownList("YearOfGraduated", (IEnumerable<SelectListItem>)ViewData["GraduatedYears"], "请选择", htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.YearOfGraduated, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.EducationalBackground, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.EducationalBackground)
    @Html.DropDownList("EducationalBackground", (IEnumerable<SelectListItem>)ViewData["EducationBackgroundTable"], "请选择", htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.EducationalBackground, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.AcademicCertNumber, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.AcademicCertNumber)
    @Html.EditorFor(model => model.AcademicCertNumber, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.AcademicCertNumber, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Degree, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.Degree)
    @Html.DropDownList("Degree", (IEnumerable<SelectListItem>)ViewData["DegreeTable"], "请选择", htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.DegreeCertNumber, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.DegreeCertNumber)
    @Html.EditorFor(model => model.DegreeCertNumber, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.DegreeCertNumber, "", new { @class = "text-danger" })
</div>

<h3>报名信息</h3>
<div class="form-group">
    @Html.LabelFor(model => model.SelectedMajor, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.SelectedMajor)
    @Html.DropDownList("SelectedMajor", (IEnumerable<SelectListItem>)ViewData["MajorTable"], "请选择", htmlAttributes: new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Resume, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.Resume)
    @Html.EditorFor(model => model.Resume, new { htmlAttributes = new { @class = "form-control", rows = 8 } })
    @Html.ValidationMessageFor(model => model.Resume, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Accomplishments, htmlAttributes: new { @class = "control-label" })
    @Html.DescriptionFor(m => m.Accomplishments)
    @Html.EditorFor(model => model.Accomplishments, new { htmlAttributes = new { @class = "form-control", rows = 10 } })
    @Html.ValidationMessageFor(model => model.Accomplishments, "", new { @class = "text-danger" })
</div>
